/******************************************************************************\
|                                                                              |
|                                  metal.less                                  |
|                                                                              |
|******************************************************************************|
|                                                                              |
|        This defines the dom and svg visual styles for this application.      |
|                                                                              |
|        Author(s): Abe Megahed                                                |
|                                                                              |
|        This file is subject to the terms and conditions defined in           |
|        'LICENSE.txt', which is part of this source code distribution.        |
|                                                                              |
|******************************************************************************|
|        Copyright (C) 2016-2020, Megahed Labs LLC, www.sharedigm.com          |
\******************************************************************************/

//
// metal properties
//

@metal-specular-size: 100%;
@metal-specular-strength: 75%;
@metal-highlight-size: 25%;
@metal-highlight-strength: 100%;
@metal-reflection-strength: 100%;

@round-metal-specular-width: 50%;
@round-metal-specular-height: 25%;
@round-metal-specular-hoffset: 50%;
@round-metal-specular-voffset: 10%;

@round-metal-highlight-width: 50%;
@round-metal-highlight-height: 25%;
@round-metal-highlight-hoffset: 50%;
@round-metal-highlight-voffset: 10%;

@round-metal-reflection-width: 100%;
@round-metal-reflection-height: 100%;
@round-metal-reflection-hoffset: 50%;
@round-metal-reflection-voffset: 0%;

@brushed-metal-texture: '../../../images/textures/brushed.png';

//
// metal mixins
//

.metal (@color: white, @direction: bottom, @border-style: outset) {
	background:

		// highlight
		//
		linear-gradient(to @direction,
			fade(lighten(@color, 30%), @metal-highlight-strength) 0%,
			fade(@color, 0%) 3px) no-repeat,

		// specular
		//
		linear-gradient(to bottom,
			fade(lighten(@color, 30%), @metal-specular-strength) 0%,
			fade(@color, 0%) 20%) no-repeat,

		// diffuse
		//
		linear-gradient(to right,
			fade(@color, 0%) 0%,
			fade(@color, 50%) 50%,
			fade(@color, 0%) 100%),
		linear-gradient(to bottom,
			@color 0%,
			darken(@color, 50%) 10%,
			lighten(@color, 20%) 100%);

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 10%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 10%);
	}
}

.plate-metal (@color: white, @direction: bottom, @border-style: outset) {
	background:

		// highlight
		//
		linear-gradient(to @direction,
			fade(lighten(@color, 20%), @metal-highlight-strength) 0%,
			fade(@color, 0%) 3px) no-repeat,

		// specular
		//
		linear-gradient(to bottom,
			fade(lighten(@color, 20%), @metal-specular-strength) 0%,
			fade(@color, 0%) 10px) no-repeat,

		// diffuse
		//
		linear-gradient(to @direction,
			lighten(@color, 20%) 0%,
			darken(@color, 20%) 5px,
			@color 100%) no-repeat;

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 10%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 10%);
	}
}

.brushed-metal (@color: white, @image-name: @brushed-metal-texture, @direction: bottom, @border-style: outset) {
	background-blend-mode: multiply;
	background-repeat: repeat;

	& when (@image-name = none) {
		background-image:

			// diffuse
			//
			linear-gradient(to right,
				fade(black, 10%) 0%,
				fade(black, 0%) 25%,
				fade(black, 0%) 75%,
				fade(black, 20%) 100%),
			linear-gradient(to @direction,
				fade(black, 30%) 0%,
				fade(black, 0%) 100%);
	}

	& when not (@image-name = none) {
		background-image:

			// diffuse
			//
			linear-gradient(to right,
				fade(black, 10%) 0%,
				fade(black, 0%) 25%,
				fade(black, 0%) 75%,
				fade(black, 20%) 100%),
			linear-gradient(to @direction,
				fade(black, 30%) 0%,
				fade(black, 0%) 100%),
			url(@image-name);
	}

	&::after {
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		content: "";
		pointer-events: none;
		border-radius: 5px;
		mix-blend-mode: screen;

		background:

			// highlight
			//
			linear-gradient(to @direction,
				fade(lighten(@color, 20%), 100%) 0%,
				fade(@color, 0%) 3px),

			// specular
			//
			linear-gradient(to bottom,
				fade(lighten(@color, 10%), 100%) 0%,
				fade(@color, 0%) 5px),

			// specular
			//
			linear-gradient(to right,
				fade(@color, 0%) 33%,
				fade(@color, 20%) 50%,
				fade(@color, 0%) 66%);
	}

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 10%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 10%);
	}
}

.polished-metal (@color: white, @direction: bottom, @border-style: outset, @background-color: white) {
	background:

		// highlight
		//
		linear-gradient(to @direction,
			fade(lighten(@color, 20%), @metal-highlight-strength) 0%,
			fade(@color, 0%) 3px) no-repeat,

		// specular
		//
		linear-gradient(to bottom,
			fade(lighten(@color, 20%), @metal-specular-strength) 0%,
			fade(@color, 0%) 20%) no-repeat,

		// specular
		//
		/*
		radial-gradient(ellipse @round-metal-specular-width @round-metal-specular-height at @round-metal-specular-hoffset @round-metal-specular-voffset,
			fade(@color, @metal-specular-strength) 0%, 
			fade(@color, 0%) @metal-specular-size) no-repeat,
		*/

		// reflected
		//
		/*
		radial-gradient(ellipse @round-metal-reflection-width @round-metal-reflection-height at @round-metal-reflection-hoffset @round-metal-reflection-voffset, 
			fade(white, 0%) 0%, 
			fade(white, 0%) 40%,
			fade(multiply(@color, @background-color), @metal-reflection-strength) 50%,
			fade(multiply(@color, @background-color), @metal-reflection-strength) 100%) no-repeat,
		*/
		/*
		linear-gradient(to bottom,
			fade(@color, 0%) 50%,
			fade(darken(multiply(@color, @background-color), 50%), @metal-reflection-strength) 50%,
			fade(multiply(@color, @background-color), @metal-reflection-strength) 100%) no-repeat,
		*/

		// reflected
		//
		/*
		repeating-linear-gradient(-15deg,
			fade(lighten(@color, 10%), 50%) 0%,
			fade(lighten(@color, 5%), 30%) 20px,
			fade(lighten(@color, 10%), 20%) 40px,
			fade(lighten(@color, 0%), 30%) 60px,
			fade(lighten(@color, 5%), 60%) 80px,
			fade(lighten(@color, 15%), 25%) 100px,
			fade(lighten(@color, 0%), 15%) 120px,
			fade(lighten(@color, 5%), 20%) 140px,
			fade(lighten(@color, 15%), 50%) 160px,
			fade(lighten(@color, 10%), 30%) 180px,
			fade(lighten(@color, 10%), 50%) 200px),
		*/

		// diffuse
		//
		linear-gradient(to bottom,
			@color 0%,
			darken(@color, 30%) 10%,
			darken(@color, 10%) 66%,
			@color 100%) no-repeat;

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 20%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 20%);
	}
}

.round-metal (@color: white, @direction: bottom, @border-style: outset, @background-color: white) {
	background:

		// highlight
		//
		radial-gradient(ellipse @round-metal-highlight-width @round-metal-highlight-height at @round-metal-highlight-hoffset @round-metal-highlight-voffset,
			fade(lighten(@color, 30%), @metal-highlight-strength) 0%, 
			fade(lighten(@color, 20%), @metal-highlight-strength) @metal-highlight-size, 
			fade(@color, 0%) 100%) no-repeat,

		// specular
		//
		radial-gradient(ellipse @round-metal-specular-width @round-metal-specular-height at @round-metal-specular-hoffset @round-metal-specular-voffset,
			fade(@color, @metal-specular-strength) 0%, 
			fade(@color, 0%) @metal-specular-size) no-repeat,

		// reflected
		//
		/*
		radial-gradient(ellipse @round-metal-reflection-width @round-metal-reflection-height at @round-metal-reflection-hoffset @round-metal-reflection-voffset, 
			fade(white, 0%) 0%, 
			fade(white, 0%) 40%,
			fade(multiply(@color, @background-color), @metal-reflection-strength) 50%,
			fade(multiply(@color, @background-color), @metal-reflection-strength) 100%) no-repeat,
		*/

		// reflected
		//
		linear-gradient(to @direction,
			fade(@color, 0%) 33%,
			fade(@color, (@metal-reflection-strength / 2)) 66%,
			fade(lighten(@color, 10%), @metal-reflection-strength)) no-repeat,

		// diffuse
		//
		darken(@color, 30%);

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 20%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 20%);
	}
}

.rounded-metal (@color: white, @direction: bottom, @border-style: outset, @background-color: white) {
	& when (@direction = top) or (@direction = bottom) {
		background:

			// highlight
			//
			linear-gradient(to @direction,
				fade(lighten(@color, 10%), 25%) 0%,
				fade(lighten(@color, 10%), @glass-highlight-strength) 10%,
				fade(lighten(@color, 10%), 0%) 30%) no-repeat,

			// reflected
			//
			linear-gradient(to @direction,
				fade(@color, 0%) 50%,
				lighten(@color, 10%) 100%) no-repeat,

			// diffuse
			//
			darken(@color, 30%);
	}

	& when (@direction = left) or (@direction = right) {
		background:

			// highlight
			//
			linear-gradient(to @direction,
				fade(lighten(@color, 10%), 25%) 0%,
				fade(lighten(@color, 10%), @glass-highlight-strength) 10%,
				fade(lighten(@color, 10%), 0%) 30%) no-repeat,

			// reflected
			//
			linear-gradient(to @direction,
				fade(black, 0%) 50%,
				lighten(@color, 10%) 100%) no-repeat,

			// diffuse
			//
			darken(@color, 30%);
	}

	// borders
	//
	& when (@border-style = inset) {
		border-color: lighten(@color, 20%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 20%);
	}
}

.long-round-metal (@color: white, @direction: bottom, @border-style: outset, @width: 10px) {
	& when (@direction = top) or (@direction = bottom) {
		background:

			// left shading
			//
			linear-gradient(to right,
				darken(@color, 20%) 0%,
				fade(darken(@color, 20%), 0) (@width / 2)) no-repeat,

			// right shading
			//
			linear-gradient(to left,
				darken(@color, 20%) 0%,
				fade(darken(@color, 20%), 0) (@width / 2)) no-repeat,

			// highlight
			//
			linear-gradient(to @direction,
				fade(lighten(@color, 20%), 0%) 0%,
				fade(lighten(@color, 20%), @metal-highlight-strength) 25%,
				fade(lighten(@color, 20%), 0%) 50%) no-repeat,

			// specular
			//
			linear-gradient(to @direction,
				fade(@color, 0%) 0%,
				fade(@color, @metal-specular-strength) 25%,
				fade(@color, 0%) 50%) no-repeat,

			// reflected
			//
			linear-gradient(to @direction,
				fade(@color, 0%) 50%,
				lighten(@color, 10%) 100%) no-repeat,

			// diffuse
			//
			darken(@color, 30%);
	}
	
	& when (@direction = left) or (@direction = right) {
		background:

			// top shading
			//
			linear-gradient(to bottom,
				darken(@color, 20%) 0%,
				fade(darken(@color, 20%), 0) (@width / 2)) no-repeat,

			// bottom shading
			//
			linear-gradient(to top,
				darken(@color, 20%) 0%,
				fade(darken(@color, 20%), 0) (@width / 2)) no-repeat,

			// highlight
			//
			linear-gradient(to @direction,
				fade(lighten(@color, 20%), 0%) 0%,
				fade(lighten(@color, 20%), @metal-highlight-strength) 25%,
				fade(lighten(@color, 20%), 0%) 50%) no-repeat,

			// specular
			//
			linear-gradient(to @direction,
				fade(@color, 0%) 0%,
				fade(@color, @metal-specular-strength) 25%,
				fade(@color, 0%) 50%) no-repeat,

			// reflected
			//
			linear-gradient(to @direction,
				fade(@color, 0%) 50%,
				lighten(@color, 10%) 100%) no-repeat,

			// diffuse
			//
			darken(@color, 30%);
	}

	// borders
	//
	& when (@border-style = inset) {
		border-color: darken(@color, 20%);
	}
	& when (@border-style = outset) {
		border-color: darken(@color, 20%);
	}
}